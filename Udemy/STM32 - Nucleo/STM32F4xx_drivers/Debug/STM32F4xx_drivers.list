
STM32F4xx_drivers.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c4  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000488  080001c4  080001c4  000101c4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  0800064c  08000654  00010654  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  0800064c  0800064c  00010654  2**0
                  CONTENTS
  4 .ARM          00000000  0800064c  0800064c  00010654  2**0
                  CONTENTS
  5 .preinit_array 00000000  0800064c  08000654  00010654  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800064c  0800064c  0001064c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000650  08000650  00010650  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  00010654  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  08000654  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  08000654  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 0000002a  00000000  00000000  00010654  2**0
                  CONTENTS, READONLY
 12 .debug_info   00000802  00000000  00000000  0001067e  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev 00000222  00000000  00000000  00010e80  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_aranges 000000b8  00000000  00000000  000110a8  2**3
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_ranges 00000090  00000000  00000000  00011160  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_line   00000750  00000000  00000000  000111f0  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_str    000004dc  00000000  00000000  00011940  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .comment      0000007b  00000000  00000000  00011e1c  2**0
                  CONTENTS, READONLY
 19 .debug_frame  00000224  00000000  00000000  00011e98  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

080001c4 <__do_global_dtors_aux>:
 80001c4:	b510      	push	{r4, lr}
 80001c6:	4c05      	ldr	r4, [pc, #20]	; (80001dc <__do_global_dtors_aux+0x18>)
 80001c8:	7823      	ldrb	r3, [r4, #0]
 80001ca:	b933      	cbnz	r3, 80001da <__do_global_dtors_aux+0x16>
 80001cc:	4b04      	ldr	r3, [pc, #16]	; (80001e0 <__do_global_dtors_aux+0x1c>)
 80001ce:	b113      	cbz	r3, 80001d6 <__do_global_dtors_aux+0x12>
 80001d0:	4804      	ldr	r0, [pc, #16]	; (80001e4 <__do_global_dtors_aux+0x20>)
 80001d2:	f3af 8000 	nop.w
 80001d6:	2301      	movs	r3, #1
 80001d8:	7023      	strb	r3, [r4, #0]
 80001da:	bd10      	pop	{r4, pc}
 80001dc:	20000000 	.word	0x20000000
 80001e0:	00000000 	.word	0x00000000
 80001e4:	08000634 	.word	0x08000634

080001e8 <frame_dummy>:
 80001e8:	b508      	push	{r3, lr}
 80001ea:	4b03      	ldr	r3, [pc, #12]	; (80001f8 <frame_dummy+0x10>)
 80001ec:	b11b      	cbz	r3, 80001f6 <frame_dummy+0xe>
 80001ee:	4903      	ldr	r1, [pc, #12]	; (80001fc <frame_dummy+0x14>)
 80001f0:	4803      	ldr	r0, [pc, #12]	; (8000200 <frame_dummy+0x18>)
 80001f2:	f3af 8000 	nop.w
 80001f6:	bd08      	pop	{r3, pc}
 80001f8:	00000000 	.word	0x00000000
 80001fc:	20000004 	.word	0x20000004
 8000200:	08000634 	.word	0x08000634

08000204 <main>:

void delay(void){

	for (uint32_t i = 0; i < 500000 ; i++);
}
int main(void){
 8000204:	b580      	push	{r7, lr}
 8000206:	b084      	sub	sp, #16
 8000208:	af00      	add	r7, sp, #0

	GPIO_Handle_t 	GpioLed;

	// Select output port
	GpioLed.pGPIO = GPIOA;
 800020a:	4b0c      	ldr	r3, [pc, #48]	; (800023c <main+0x38>)
 800020c:	607b      	str	r3, [r7, #4]
	// Configure pin
	GpioLed.GPIO_Pin_Config.GPIO_PinNumber = GPIO_PIN_NO_5;
 800020e:	2305      	movs	r3, #5
 8000210:	723b      	strb	r3, [r7, #8]
	GpioLed.GPIO_Pin_Config.GPIO_PinOPType = GPIO_MODE_OP;
 8000212:	2301      	movs	r3, #1
 8000214:	733b      	strb	r3, [r7, #12]
	GpioLed.GPIO_Pin_Config.GPIO_PinSpeed = GPIO_OP_SPEED_FAST;
 8000216:	2302      	movs	r3, #2
 8000218:	72bb      	strb	r3, [r7, #10]
	GpioLed.GPIO_Pin_Config.GPIO_PinOPType = GPIO_OP_TYPE_PP;
 800021a:	2300      	movs	r3, #0
 800021c:	733b      	strb	r3, [r7, #12]
	GpioLed.GPIO_Pin_Config.GPIO_PinPuPdControl = GPIO_NO_PUSH_PULL;
 800021e:	2300      	movs	r3, #0
 8000220:	72fb      	strb	r3, [r7, #11]
	// Enable Clock
	GPIO_PeriClockControl(GPIOA, ENABLE);
 8000222:	2101      	movs	r1, #1
 8000224:	4805      	ldr	r0, [pc, #20]	; (800023c <main+0x38>)
 8000226:	f000 f835 	bl	8000294 <GPIO_PeriClockControl>
	// Initialize pin output
	GPIO_Init(&GpioLed);
 800022a:	1d3b      	adds	r3, r7, #4
 800022c:	4618      	mov	r0, r3
 800022e:	f000 f901 	bl	8000434 <GPIO_Init>

	while(1)
	{
		GPIO_ToggleOutputPin(GPIOA, GPIO_PIN_NO_5);
 8000232:	2105      	movs	r1, #5
 8000234:	4801      	ldr	r0, [pc, #4]	; (800023c <main+0x38>)
 8000236:	f000 f9c4 	bl	80005c2 <GPIO_ToggleOutputPin>
 800023a:	e7fa      	b.n	8000232 <main+0x2e>
 800023c:	40020000 	.word	0x40020000

08000240 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000240:	480d      	ldr	r0, [pc, #52]	; (8000278 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000242:	4685      	mov	sp, r0

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000244:	480d      	ldr	r0, [pc, #52]	; (800027c <LoopForever+0x6>)
  ldr r1, =_edata
 8000246:	490e      	ldr	r1, [pc, #56]	; (8000280 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000248:	4a0e      	ldr	r2, [pc, #56]	; (8000284 <LoopForever+0xe>)
  movs r3, #0
 800024a:	2300      	movs	r3, #0
  b LoopCopyDataInit
 800024c:	e002      	b.n	8000254 <LoopCopyDataInit>

0800024e <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800024e:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000250:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000252:	3304      	adds	r3, #4

08000254 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000254:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000256:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000258:	d3f9      	bcc.n	800024e <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800025a:	4a0b      	ldr	r2, [pc, #44]	; (8000288 <LoopForever+0x12>)
  ldr r4, =_ebss
 800025c:	4c0b      	ldr	r4, [pc, #44]	; (800028c <LoopForever+0x16>)
  movs r3, #0
 800025e:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000260:	e001      	b.n	8000266 <LoopFillZerobss>

08000262 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000262:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000264:	3204      	adds	r2, #4

08000266 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000266:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000268:	d3fb      	bcc.n	8000262 <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit
 800026a:	f3af 8000 	nop.w
/* Call static constructors */
  bl __libc_init_array
 800026e:	f000 f9bd 	bl	80005ec <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000272:	f7ff ffc7 	bl	8000204 <main>

08000276 <LoopForever>:

LoopForever:
    b LoopForever
 8000276:	e7fe      	b.n	8000276 <LoopForever>
  ldr   r0, =_estack
 8000278:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 800027c:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000280:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000284:	08000654 	.word	0x08000654
  ldr r2, =_sbss
 8000288:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 800028c:	2000001c 	.word	0x2000001c

08000290 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000290:	e7fe      	b.n	8000290 <ADC_IRQHandler>
	...

08000294 <GPIO_PeriClockControl>:
 *
 * @return			- none
 *
 * @Note			- none
 */
void GPIO_PeriClockControl(HAL_GPIO_RegDef_t * pGPIOx, uint8_t EnOrDi){
 8000294:	b480      	push	{r7}
 8000296:	b083      	sub	sp, #12
 8000298:	af00      	add	r7, sp, #0
 800029a:	6078      	str	r0, [r7, #4]
 800029c:	460b      	mov	r3, r1
 800029e:	70fb      	strb	r3, [r7, #3]

	if (EnOrDi == ENABLE)
 80002a0:	78fb      	ldrb	r3, [r7, #3]
 80002a2:	2b01      	cmp	r3, #1
 80002a4:	d157      	bne.n	8000356 <GPIO_PeriClockControl+0xc2>
	{
		if (pGPIOx == GPIOA)
 80002a6:	687b      	ldr	r3, [r7, #4]
 80002a8:	4a59      	ldr	r2, [pc, #356]	; (8000410 <GPIO_PeriClockControl+0x17c>)
 80002aa:	4293      	cmp	r3, r2
 80002ac:	d106      	bne.n	80002bc <GPIO_PeriClockControl+0x28>
		{
			HAL_GPIOA_PCLK_EN();
 80002ae:	4b59      	ldr	r3, [pc, #356]	; (8000414 <GPIO_PeriClockControl+0x180>)
 80002b0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002b2:	4a58      	ldr	r2, [pc, #352]	; (8000414 <GPIO_PeriClockControl+0x180>)
 80002b4:	f043 0301 	orr.w	r3, r3, #1
 80002b8:	6313      	str	r3, [r2, #48]	; 0x30
		}else if (pGPIOx == GPIOH)
		{
			HAL_GPIOH_PCLK_DE();
		}
	}
}
 80002ba:	e0a3      	b.n	8000404 <GPIO_PeriClockControl+0x170>
		}else if (pGPIOx == GPIOB)
 80002bc:	687b      	ldr	r3, [r7, #4]
 80002be:	4a56      	ldr	r2, [pc, #344]	; (8000418 <GPIO_PeriClockControl+0x184>)
 80002c0:	4293      	cmp	r3, r2
 80002c2:	d106      	bne.n	80002d2 <GPIO_PeriClockControl+0x3e>
			HAL_GPIOB_PCLK_EN();
 80002c4:	4b53      	ldr	r3, [pc, #332]	; (8000414 <GPIO_PeriClockControl+0x180>)
 80002c6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002c8:	4a52      	ldr	r2, [pc, #328]	; (8000414 <GPIO_PeriClockControl+0x180>)
 80002ca:	f043 0302 	orr.w	r3, r3, #2
 80002ce:	6313      	str	r3, [r2, #48]	; 0x30
}
 80002d0:	e098      	b.n	8000404 <GPIO_PeriClockControl+0x170>
		}else if (pGPIOx == GPIOC)
 80002d2:	687b      	ldr	r3, [r7, #4]
 80002d4:	4a51      	ldr	r2, [pc, #324]	; (800041c <GPIO_PeriClockControl+0x188>)
 80002d6:	4293      	cmp	r3, r2
 80002d8:	d106      	bne.n	80002e8 <GPIO_PeriClockControl+0x54>
			HAL_GPIOC_PCLK_EN();
 80002da:	4b4e      	ldr	r3, [pc, #312]	; (8000414 <GPIO_PeriClockControl+0x180>)
 80002dc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002de:	4a4d      	ldr	r2, [pc, #308]	; (8000414 <GPIO_PeriClockControl+0x180>)
 80002e0:	f043 0304 	orr.w	r3, r3, #4
 80002e4:	6313      	str	r3, [r2, #48]	; 0x30
}
 80002e6:	e08d      	b.n	8000404 <GPIO_PeriClockControl+0x170>
		}else if (pGPIOx == GPIOD)
 80002e8:	687b      	ldr	r3, [r7, #4]
 80002ea:	4a4d      	ldr	r2, [pc, #308]	; (8000420 <GPIO_PeriClockControl+0x18c>)
 80002ec:	4293      	cmp	r3, r2
 80002ee:	d106      	bne.n	80002fe <GPIO_PeriClockControl+0x6a>
			HAL_GPIOD_PCLK_EN();
 80002f0:	4b48      	ldr	r3, [pc, #288]	; (8000414 <GPIO_PeriClockControl+0x180>)
 80002f2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002f4:	4a47      	ldr	r2, [pc, #284]	; (8000414 <GPIO_PeriClockControl+0x180>)
 80002f6:	f043 0308 	orr.w	r3, r3, #8
 80002fa:	6313      	str	r3, [r2, #48]	; 0x30
}
 80002fc:	e082      	b.n	8000404 <GPIO_PeriClockControl+0x170>
		}else if (pGPIOx == GPIOE)
 80002fe:	687b      	ldr	r3, [r7, #4]
 8000300:	4a48      	ldr	r2, [pc, #288]	; (8000424 <GPIO_PeriClockControl+0x190>)
 8000302:	4293      	cmp	r3, r2
 8000304:	d106      	bne.n	8000314 <GPIO_PeriClockControl+0x80>
			HAL_GPIOE_PCLK_EN();
 8000306:	4b43      	ldr	r3, [pc, #268]	; (8000414 <GPIO_PeriClockControl+0x180>)
 8000308:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800030a:	4a42      	ldr	r2, [pc, #264]	; (8000414 <GPIO_PeriClockControl+0x180>)
 800030c:	f043 0310 	orr.w	r3, r3, #16
 8000310:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000312:	e077      	b.n	8000404 <GPIO_PeriClockControl+0x170>
		}else if (pGPIOx == GPIOF)
 8000314:	687b      	ldr	r3, [r7, #4]
 8000316:	4a44      	ldr	r2, [pc, #272]	; (8000428 <GPIO_PeriClockControl+0x194>)
 8000318:	4293      	cmp	r3, r2
 800031a:	d106      	bne.n	800032a <GPIO_PeriClockControl+0x96>
			HAL_GPIOF_PCLK_EN();
 800031c:	4b3d      	ldr	r3, [pc, #244]	; (8000414 <GPIO_PeriClockControl+0x180>)
 800031e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000320:	4a3c      	ldr	r2, [pc, #240]	; (8000414 <GPIO_PeriClockControl+0x180>)
 8000322:	f043 0320 	orr.w	r3, r3, #32
 8000326:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000328:	e06c      	b.n	8000404 <GPIO_PeriClockControl+0x170>
		}else if (pGPIOx == GPIOG)
 800032a:	687b      	ldr	r3, [r7, #4]
 800032c:	4a3f      	ldr	r2, [pc, #252]	; (800042c <GPIO_PeriClockControl+0x198>)
 800032e:	4293      	cmp	r3, r2
 8000330:	d106      	bne.n	8000340 <GPIO_PeriClockControl+0xac>
			HAL_GPIOG_PCLK_EN();
 8000332:	4b38      	ldr	r3, [pc, #224]	; (8000414 <GPIO_PeriClockControl+0x180>)
 8000334:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000336:	4a37      	ldr	r2, [pc, #220]	; (8000414 <GPIO_PeriClockControl+0x180>)
 8000338:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800033c:	6313      	str	r3, [r2, #48]	; 0x30
}
 800033e:	e061      	b.n	8000404 <GPIO_PeriClockControl+0x170>
		}else if (pGPIOx == GPIOH)
 8000340:	687b      	ldr	r3, [r7, #4]
 8000342:	4a3b      	ldr	r2, [pc, #236]	; (8000430 <GPIO_PeriClockControl+0x19c>)
 8000344:	4293      	cmp	r3, r2
 8000346:	d15d      	bne.n	8000404 <GPIO_PeriClockControl+0x170>
			HAL_GPIOH_PCLK_EN();
 8000348:	4b32      	ldr	r3, [pc, #200]	; (8000414 <GPIO_PeriClockControl+0x180>)
 800034a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800034c:	4a31      	ldr	r2, [pc, #196]	; (8000414 <GPIO_PeriClockControl+0x180>)
 800034e:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000352:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000354:	e056      	b.n	8000404 <GPIO_PeriClockControl+0x170>
		if (pGPIOx == GPIOA)
 8000356:	687b      	ldr	r3, [r7, #4]
 8000358:	4a2d      	ldr	r2, [pc, #180]	; (8000410 <GPIO_PeriClockControl+0x17c>)
 800035a:	4293      	cmp	r3, r2
 800035c:	d106      	bne.n	800036c <GPIO_PeriClockControl+0xd8>
			HAL_GPIOA_PCLK_DE();
 800035e:	4b2d      	ldr	r3, [pc, #180]	; (8000414 <GPIO_PeriClockControl+0x180>)
 8000360:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000362:	4a2c      	ldr	r2, [pc, #176]	; (8000414 <GPIO_PeriClockControl+0x180>)
 8000364:	f023 0301 	bic.w	r3, r3, #1
 8000368:	6313      	str	r3, [r2, #48]	; 0x30
}
 800036a:	e04b      	b.n	8000404 <GPIO_PeriClockControl+0x170>
		}else if (pGPIOx == GPIOB)
 800036c:	687b      	ldr	r3, [r7, #4]
 800036e:	4a2a      	ldr	r2, [pc, #168]	; (8000418 <GPIO_PeriClockControl+0x184>)
 8000370:	4293      	cmp	r3, r2
 8000372:	d106      	bne.n	8000382 <GPIO_PeriClockControl+0xee>
			HAL_GPIOB_PCLK_DE();
 8000374:	4b27      	ldr	r3, [pc, #156]	; (8000414 <GPIO_PeriClockControl+0x180>)
 8000376:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000378:	4a26      	ldr	r2, [pc, #152]	; (8000414 <GPIO_PeriClockControl+0x180>)
 800037a:	f023 0302 	bic.w	r3, r3, #2
 800037e:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000380:	e040      	b.n	8000404 <GPIO_PeriClockControl+0x170>
		}else if (pGPIOx == GPIOC)
 8000382:	687b      	ldr	r3, [r7, #4]
 8000384:	4a25      	ldr	r2, [pc, #148]	; (800041c <GPIO_PeriClockControl+0x188>)
 8000386:	4293      	cmp	r3, r2
 8000388:	d106      	bne.n	8000398 <GPIO_PeriClockControl+0x104>
			HAL_GPIOC_PCLK_DE();
 800038a:	4b22      	ldr	r3, [pc, #136]	; (8000414 <GPIO_PeriClockControl+0x180>)
 800038c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800038e:	4a21      	ldr	r2, [pc, #132]	; (8000414 <GPIO_PeriClockControl+0x180>)
 8000390:	f023 0304 	bic.w	r3, r3, #4
 8000394:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000396:	e035      	b.n	8000404 <GPIO_PeriClockControl+0x170>
		}else if (pGPIOx == GPIOD)
 8000398:	687b      	ldr	r3, [r7, #4]
 800039a:	4a21      	ldr	r2, [pc, #132]	; (8000420 <GPIO_PeriClockControl+0x18c>)
 800039c:	4293      	cmp	r3, r2
 800039e:	d106      	bne.n	80003ae <GPIO_PeriClockControl+0x11a>
			HAL_GPIOD_PCLK_DE();
 80003a0:	4b1c      	ldr	r3, [pc, #112]	; (8000414 <GPIO_PeriClockControl+0x180>)
 80003a2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003a4:	4a1b      	ldr	r2, [pc, #108]	; (8000414 <GPIO_PeriClockControl+0x180>)
 80003a6:	f023 0308 	bic.w	r3, r3, #8
 80003aa:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003ac:	e02a      	b.n	8000404 <GPIO_PeriClockControl+0x170>
		}else if (pGPIOx == GPIOE)
 80003ae:	687b      	ldr	r3, [r7, #4]
 80003b0:	4a1c      	ldr	r2, [pc, #112]	; (8000424 <GPIO_PeriClockControl+0x190>)
 80003b2:	4293      	cmp	r3, r2
 80003b4:	d106      	bne.n	80003c4 <GPIO_PeriClockControl+0x130>
			HAL_GPIOE_PCLK_DE();
 80003b6:	4b17      	ldr	r3, [pc, #92]	; (8000414 <GPIO_PeriClockControl+0x180>)
 80003b8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003ba:	4a16      	ldr	r2, [pc, #88]	; (8000414 <GPIO_PeriClockControl+0x180>)
 80003bc:	f023 0310 	bic.w	r3, r3, #16
 80003c0:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003c2:	e01f      	b.n	8000404 <GPIO_PeriClockControl+0x170>
		}else if (pGPIOx == GPIOF)
 80003c4:	687b      	ldr	r3, [r7, #4]
 80003c6:	4a18      	ldr	r2, [pc, #96]	; (8000428 <GPIO_PeriClockControl+0x194>)
 80003c8:	4293      	cmp	r3, r2
 80003ca:	d106      	bne.n	80003da <GPIO_PeriClockControl+0x146>
			HAL_GPIOF_PCLK_DE();
 80003cc:	4b11      	ldr	r3, [pc, #68]	; (8000414 <GPIO_PeriClockControl+0x180>)
 80003ce:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003d0:	4a10      	ldr	r2, [pc, #64]	; (8000414 <GPIO_PeriClockControl+0x180>)
 80003d2:	f023 0320 	bic.w	r3, r3, #32
 80003d6:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003d8:	e014      	b.n	8000404 <GPIO_PeriClockControl+0x170>
		}else if (pGPIOx == GPIOG)
 80003da:	687b      	ldr	r3, [r7, #4]
 80003dc:	4a13      	ldr	r2, [pc, #76]	; (800042c <GPIO_PeriClockControl+0x198>)
 80003de:	4293      	cmp	r3, r2
 80003e0:	d106      	bne.n	80003f0 <GPIO_PeriClockControl+0x15c>
			HAL_GPIOG_PCLK_DE();
 80003e2:	4b0c      	ldr	r3, [pc, #48]	; (8000414 <GPIO_PeriClockControl+0x180>)
 80003e4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003e6:	4a0b      	ldr	r2, [pc, #44]	; (8000414 <GPIO_PeriClockControl+0x180>)
 80003e8:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 80003ec:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003ee:	e009      	b.n	8000404 <GPIO_PeriClockControl+0x170>
		}else if (pGPIOx == GPIOH)
 80003f0:	687b      	ldr	r3, [r7, #4]
 80003f2:	4a0f      	ldr	r2, [pc, #60]	; (8000430 <GPIO_PeriClockControl+0x19c>)
 80003f4:	4293      	cmp	r3, r2
 80003f6:	d105      	bne.n	8000404 <GPIO_PeriClockControl+0x170>
			HAL_GPIOH_PCLK_DE();
 80003f8:	4b06      	ldr	r3, [pc, #24]	; (8000414 <GPIO_PeriClockControl+0x180>)
 80003fa:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003fc:	4a05      	ldr	r2, [pc, #20]	; (8000414 <GPIO_PeriClockControl+0x180>)
 80003fe:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8000402:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000404:	bf00      	nop
 8000406:	370c      	adds	r7, #12
 8000408:	46bd      	mov	sp, r7
 800040a:	bc80      	pop	{r7}
 800040c:	4770      	bx	lr
 800040e:	bf00      	nop
 8000410:	40020000 	.word	0x40020000
 8000414:	40023800 	.word	0x40023800
 8000418:	40020400 	.word	0x40020400
 800041c:	40020800 	.word	0x40020800
 8000420:	40020c00 	.word	0x40020c00
 8000424:	40021000 	.word	0x40021000
 8000428:	40021400 	.word	0x40021400
 800042c:	40021800 	.word	0x40021800
 8000430:	40021c00 	.word	0x40021c00

08000434 <GPIO_Init>:
 *
 * @return			- none
 *
 * @Note			- none
 */
void GPIO_Init(GPIO_Handle_t * pGPIOHandle){
 8000434:	b480      	push	{r7}
 8000436:	b087      	sub	sp, #28
 8000438:	af00      	add	r7, sp, #0
 800043a:	6078      	str	r0, [r7, #4]

	uint32_t temp = 0; // temp. register
 800043c:	2300      	movs	r3, #0
 800043e:	617b      	str	r3, [r7, #20]
	// 1. Mode configuration of the GPIO port, <= 3, i.e. (0 - 3)
	if (pGPIOHandle->GPIO_Pin_Config.GPIO_PinMode<= GPIO_MODE_ANALOG){
 8000440:	687b      	ldr	r3, [r7, #4]
 8000442:	795b      	ldrb	r3, [r3, #5]
 8000444:	2b03      	cmp	r3, #3
 8000446:	d81e      	bhi.n	8000486 <GPIO_Init+0x52>

		// non interrupt mode
		temp = pGPIOHandle->GPIO_Pin_Config.GPIO_PinMode << (2 * pGPIOHandle->GPIO_Pin_Config.GPIO_PinNumber);
 8000448:	687b      	ldr	r3, [r7, #4]
 800044a:	795b      	ldrb	r3, [r3, #5]
 800044c:	461a      	mov	r2, r3
 800044e:	687b      	ldr	r3, [r7, #4]
 8000450:	791b      	ldrb	r3, [r3, #4]
 8000452:	005b      	lsls	r3, r3, #1
 8000454:	fa02 f303 	lsl.w	r3, r2, r3
 8000458:	617b      	str	r3, [r7, #20]
		pGPIOHandle->pGPIO->MODER &= ~( 0x3 <<pGPIOHandle->GPIO_Pin_Config.GPIO_PinNumber);		// Reset the bits first to avoid conflicts, 0x3 "Must be 11" clears 2 bits at once.
 800045a:	687b      	ldr	r3, [r7, #4]
 800045c:	681b      	ldr	r3, [r3, #0]
 800045e:	681a      	ldr	r2, [r3, #0]
 8000460:	687b      	ldr	r3, [r7, #4]
 8000462:	791b      	ldrb	r3, [r3, #4]
 8000464:	4619      	mov	r1, r3
 8000466:	2303      	movs	r3, #3
 8000468:	408b      	lsls	r3, r1
 800046a:	43db      	mvns	r3, r3
 800046c:	4619      	mov	r1, r3
 800046e:	687b      	ldr	r3, [r7, #4]
 8000470:	681b      	ldr	r3, [r3, #0]
 8000472:	400a      	ands	r2, r1
 8000474:	601a      	str	r2, [r3, #0]
		pGPIOHandle->pGPIO->MODER |= temp;
 8000476:	687b      	ldr	r3, [r7, #4]
 8000478:	681b      	ldr	r3, [r3, #0]
 800047a:	6819      	ldr	r1, [r3, #0]
 800047c:	687b      	ldr	r3, [r7, #4]
 800047e:	681b      	ldr	r3, [r3, #0]
 8000480:	697a      	ldr	r2, [r7, #20]
 8000482:	430a      	orrs	r2, r1
 8000484:	601a      	str	r2, [r3, #0]
	{

	}

	// 2. Speed configuration
	temp = 0;
 8000486:	2300      	movs	r3, #0
 8000488:	617b      	str	r3, [r7, #20]
	temp = (pGPIOHandle->GPIO_Pin_Config.GPIO_PinSpeed << (2 * pGPIOHandle->GPIO_Pin_Config.GPIO_PinNumber));
 800048a:	687b      	ldr	r3, [r7, #4]
 800048c:	799b      	ldrb	r3, [r3, #6]
 800048e:	461a      	mov	r2, r3
 8000490:	687b      	ldr	r3, [r7, #4]
 8000492:	791b      	ldrb	r3, [r3, #4]
 8000494:	005b      	lsls	r3, r3, #1
 8000496:	fa02 f303 	lsl.w	r3, r2, r3
 800049a:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIO->OSPEEDER &= ~( 0x3 <<pGPIOHandle->GPIO_Pin_Config.GPIO_PinNumber);		// Reset the bits first to avoid conflicts, 0x3 "Must be 11" clears 2 bits at once.
 800049c:	687b      	ldr	r3, [r7, #4]
 800049e:	681b      	ldr	r3, [r3, #0]
 80004a0:	689a      	ldr	r2, [r3, #8]
 80004a2:	687b      	ldr	r3, [r7, #4]
 80004a4:	791b      	ldrb	r3, [r3, #4]
 80004a6:	4619      	mov	r1, r3
 80004a8:	2303      	movs	r3, #3
 80004aa:	408b      	lsls	r3, r1
 80004ac:	43db      	mvns	r3, r3
 80004ae:	4619      	mov	r1, r3
 80004b0:	687b      	ldr	r3, [r7, #4]
 80004b2:	681b      	ldr	r3, [r3, #0]
 80004b4:	400a      	ands	r2, r1
 80004b6:	609a      	str	r2, [r3, #8]
	pGPIOHandle->pGPIO->OSPEEDER |= temp;
 80004b8:	687b      	ldr	r3, [r7, #4]
 80004ba:	681b      	ldr	r3, [r3, #0]
 80004bc:	6899      	ldr	r1, [r3, #8]
 80004be:	687b      	ldr	r3, [r7, #4]
 80004c0:	681b      	ldr	r3, [r3, #0]
 80004c2:	697a      	ldr	r2, [r7, #20]
 80004c4:	430a      	orrs	r2, r1
 80004c6:	609a      	str	r2, [r3, #8]

	// 3. Pull up/down settings
	temp = 0;
 80004c8:	2300      	movs	r3, #0
 80004ca:	617b      	str	r3, [r7, #20]
	temp = (pGPIOHandle->GPIO_Pin_Config.GPIO_PinPuPdControl << (2 * pGPIOHandle->GPIO_Pin_Config.GPIO_PinNumber));
 80004cc:	687b      	ldr	r3, [r7, #4]
 80004ce:	79db      	ldrb	r3, [r3, #7]
 80004d0:	461a      	mov	r2, r3
 80004d2:	687b      	ldr	r3, [r7, #4]
 80004d4:	791b      	ldrb	r3, [r3, #4]
 80004d6:	005b      	lsls	r3, r3, #1
 80004d8:	fa02 f303 	lsl.w	r3, r2, r3
 80004dc:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIO->PUPDR &= ~( 0x3 <<pGPIOHandle->GPIO_Pin_Config.GPIO_PinNumber);		// Reset the bits first to avoid conflicts, 0x3 "Must be 11" clears 2 bits at once.
 80004de:	687b      	ldr	r3, [r7, #4]
 80004e0:	681b      	ldr	r3, [r3, #0]
 80004e2:	68da      	ldr	r2, [r3, #12]
 80004e4:	687b      	ldr	r3, [r7, #4]
 80004e6:	791b      	ldrb	r3, [r3, #4]
 80004e8:	4619      	mov	r1, r3
 80004ea:	2303      	movs	r3, #3
 80004ec:	408b      	lsls	r3, r1
 80004ee:	43db      	mvns	r3, r3
 80004f0:	4619      	mov	r1, r3
 80004f2:	687b      	ldr	r3, [r7, #4]
 80004f4:	681b      	ldr	r3, [r3, #0]
 80004f6:	400a      	ands	r2, r1
 80004f8:	60da      	str	r2, [r3, #12]
	pGPIOHandle->pGPIO->PUPDR |= temp;
 80004fa:	687b      	ldr	r3, [r7, #4]
 80004fc:	681b      	ldr	r3, [r3, #0]
 80004fe:	68d9      	ldr	r1, [r3, #12]
 8000500:	687b      	ldr	r3, [r7, #4]
 8000502:	681b      	ldr	r3, [r3, #0]
 8000504:	697a      	ldr	r2, [r7, #20]
 8000506:	430a      	orrs	r2, r1
 8000508:	60da      	str	r2, [r3, #12]

	// 4. Output type config.
	temp = 0;
 800050a:	2300      	movs	r3, #0
 800050c:	617b      	str	r3, [r7, #20]
	temp = (pGPIOHandle->GPIO_Pin_Config.GPIO_PinOPType << (pGPIOHandle->GPIO_Pin_Config.GPIO_PinNumber));
 800050e:	687b      	ldr	r3, [r7, #4]
 8000510:	7a1b      	ldrb	r3, [r3, #8]
 8000512:	461a      	mov	r2, r3
 8000514:	687b      	ldr	r3, [r7, #4]
 8000516:	791b      	ldrb	r3, [r3, #4]
 8000518:	fa02 f303 	lsl.w	r3, r2, r3
 800051c:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIO->OTYPER &= ~( 0x1 <<pGPIOHandle->GPIO_Pin_Config.GPIO_PinNumber);		// Reset the bits first to avoid conflicts, 0x1 "Must be 1" clears 2 bits at once.
 800051e:	687b      	ldr	r3, [r7, #4]
 8000520:	681b      	ldr	r3, [r3, #0]
 8000522:	685a      	ldr	r2, [r3, #4]
 8000524:	687b      	ldr	r3, [r7, #4]
 8000526:	791b      	ldrb	r3, [r3, #4]
 8000528:	4619      	mov	r1, r3
 800052a:	2301      	movs	r3, #1
 800052c:	408b      	lsls	r3, r1
 800052e:	43db      	mvns	r3, r3
 8000530:	4619      	mov	r1, r3
 8000532:	687b      	ldr	r3, [r7, #4]
 8000534:	681b      	ldr	r3, [r3, #0]
 8000536:	400a      	ands	r2, r1
 8000538:	605a      	str	r2, [r3, #4]
	pGPIOHandle->pGPIO->OTYPER |= temp;
 800053a:	687b      	ldr	r3, [r7, #4]
 800053c:	681b      	ldr	r3, [r3, #0]
 800053e:	6859      	ldr	r1, [r3, #4]
 8000540:	687b      	ldr	r3, [r7, #4]
 8000542:	681b      	ldr	r3, [r3, #0]
 8000544:	697a      	ldr	r2, [r7, #20]
 8000546:	430a      	orrs	r2, r1
 8000548:	605a      	str	r2, [r3, #4]

	// 5. Alt. functionality config.
	if (pGPIOHandle->GPIO_Pin_Config.GPIO_PinMode == GPIO_MODE_ALTFN)
 800054a:	687b      	ldr	r3, [r7, #4]
 800054c:	795b      	ldrb	r3, [r3, #5]
 800054e:	2b02      	cmp	r3, #2
 8000550:	d132      	bne.n	80005b8 <GPIO_Init+0x184>
	{
		uint32_t temp1 = pGPIOHandle->GPIO_Pin_Config.GPIO_PinNumber / 8; 		// Divide by 8 define [Low or High] register
 8000552:	687b      	ldr	r3, [r7, #4]
 8000554:	791b      	ldrb	r3, [r3, #4]
 8000556:	08db      	lsrs	r3, r3, #3
 8000558:	b2db      	uxtb	r3, r3
 800055a:	613b      	str	r3, [r7, #16]
		uint32_t temp2 = pGPIOHandle->GPIO_Pin_Config.GPIO_PinNumber % 8;		// Module by 8 to know the shift value
 800055c:	687b      	ldr	r3, [r7, #4]
 800055e:	791b      	ldrb	r3, [r3, #4]
 8000560:	f003 0307 	and.w	r3, r3, #7
 8000564:	60fb      	str	r3, [r7, #12]
		pGPIOHandle->pGPIO->AFR[temp1] &= ~( 0xF <<pGPIOHandle->GPIO_Pin_Config.GPIO_PinNumber);		// Reset the bits first to avoid conflicts, 0xF "Must be 1111" clears 2 bits at once.
 8000566:	687b      	ldr	r3, [r7, #4]
 8000568:	681b      	ldr	r3, [r3, #0]
 800056a:	693a      	ldr	r2, [r7, #16]
 800056c:	3208      	adds	r2, #8
 800056e:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 8000572:	687b      	ldr	r3, [r7, #4]
 8000574:	791b      	ldrb	r3, [r3, #4]
 8000576:	4619      	mov	r1, r3
 8000578:	230f      	movs	r3, #15
 800057a:	408b      	lsls	r3, r1
 800057c:	43db      	mvns	r3, r3
 800057e:	4619      	mov	r1, r3
 8000580:	687b      	ldr	r3, [r7, #4]
 8000582:	681b      	ldr	r3, [r3, #0]
 8000584:	4011      	ands	r1, r2
 8000586:	693a      	ldr	r2, [r7, #16]
 8000588:	3208      	adds	r2, #8
 800058a:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
		pGPIOHandle->pGPIO->AFR[temp1] |= (pGPIOHandle->GPIO_Pin_Config.GPIO_PinAltFunMode << (4 * temp2));
 800058e:	687b      	ldr	r3, [r7, #4]
 8000590:	681b      	ldr	r3, [r3, #0]
 8000592:	693a      	ldr	r2, [r7, #16]
 8000594:	3208      	adds	r2, #8
 8000596:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 800059a:	687b      	ldr	r3, [r7, #4]
 800059c:	7a5b      	ldrb	r3, [r3, #9]
 800059e:	4619      	mov	r1, r3
 80005a0:	68fb      	ldr	r3, [r7, #12]
 80005a2:	009b      	lsls	r3, r3, #2
 80005a4:	fa01 f303 	lsl.w	r3, r1, r3
 80005a8:	4619      	mov	r1, r3
 80005aa:	687b      	ldr	r3, [r7, #4]
 80005ac:	681b      	ldr	r3, [r3, #0]
 80005ae:	4311      	orrs	r1, r2
 80005b0:	693a      	ldr	r2, [r7, #16]
 80005b2:	3208      	adds	r2, #8
 80005b4:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
	}
}
 80005b8:	bf00      	nop
 80005ba:	371c      	adds	r7, #28
 80005bc:	46bd      	mov	sp, r7
 80005be:	bc80      	pop	{r7}
 80005c0:	4770      	bx	lr

080005c2 <GPIO_ToggleOutputPin>:
 *
 * @return			- none
 *
 * @Note			- none
 */
void GPIO_ToggleOutputPin(HAL_GPIO_RegDef_t * pGPIOx, uint8_t PinNumber){
 80005c2:	b480      	push	{r7}
 80005c4:	b083      	sub	sp, #12
 80005c6:	af00      	add	r7, sp, #0
 80005c8:	6078      	str	r0, [r7, #4]
 80005ca:	460b      	mov	r3, r1
 80005cc:	70fb      	strb	r3, [r7, #3]

	pGPIOx->ODR ^= (1 << PinNumber);
 80005ce:	687b      	ldr	r3, [r7, #4]
 80005d0:	695b      	ldr	r3, [r3, #20]
 80005d2:	78fa      	ldrb	r2, [r7, #3]
 80005d4:	2101      	movs	r1, #1
 80005d6:	fa01 f202 	lsl.w	r2, r1, r2
 80005da:	405a      	eors	r2, r3
 80005dc:	687b      	ldr	r3, [r7, #4]
 80005de:	615a      	str	r2, [r3, #20]
}
 80005e0:	bf00      	nop
 80005e2:	370c      	adds	r7, #12
 80005e4:	46bd      	mov	sp, r7
 80005e6:	bc80      	pop	{r7}
 80005e8:	4770      	bx	lr
	...

080005ec <__libc_init_array>:
 80005ec:	b570      	push	{r4, r5, r6, lr}
 80005ee:	4e0d      	ldr	r6, [pc, #52]	; (8000624 <__libc_init_array+0x38>)
 80005f0:	4c0d      	ldr	r4, [pc, #52]	; (8000628 <__libc_init_array+0x3c>)
 80005f2:	1ba4      	subs	r4, r4, r6
 80005f4:	10a4      	asrs	r4, r4, #2
 80005f6:	2500      	movs	r5, #0
 80005f8:	42a5      	cmp	r5, r4
 80005fa:	d109      	bne.n	8000610 <__libc_init_array+0x24>
 80005fc:	4e0b      	ldr	r6, [pc, #44]	; (800062c <__libc_init_array+0x40>)
 80005fe:	4c0c      	ldr	r4, [pc, #48]	; (8000630 <__libc_init_array+0x44>)
 8000600:	f000 f818 	bl	8000634 <_init>
 8000604:	1ba4      	subs	r4, r4, r6
 8000606:	10a4      	asrs	r4, r4, #2
 8000608:	2500      	movs	r5, #0
 800060a:	42a5      	cmp	r5, r4
 800060c:	d105      	bne.n	800061a <__libc_init_array+0x2e>
 800060e:	bd70      	pop	{r4, r5, r6, pc}
 8000610:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8000614:	4798      	blx	r3
 8000616:	3501      	adds	r5, #1
 8000618:	e7ee      	b.n	80005f8 <__libc_init_array+0xc>
 800061a:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 800061e:	4798      	blx	r3
 8000620:	3501      	adds	r5, #1
 8000622:	e7f2      	b.n	800060a <__libc_init_array+0x1e>
 8000624:	0800064c 	.word	0x0800064c
 8000628:	0800064c 	.word	0x0800064c
 800062c:	0800064c 	.word	0x0800064c
 8000630:	08000650 	.word	0x08000650

08000634 <_init>:
 8000634:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000636:	bf00      	nop
 8000638:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800063a:	bc08      	pop	{r3}
 800063c:	469e      	mov	lr, r3
 800063e:	4770      	bx	lr

08000640 <_fini>:
 8000640:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000642:	bf00      	nop
 8000644:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000646:	bc08      	pop	{r3}
 8000648:	469e      	mov	lr, r3
 800064a:	4770      	bx	lr
